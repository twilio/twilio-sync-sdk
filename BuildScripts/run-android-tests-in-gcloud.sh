#!/bin/bash

if [ $# -lt 8 ]; then
    SELF=`basename $0`
    echo "Usage: $SELF <APK_RUNNER_APP> <APK_RUNNER_ANDROID_TEST> <FLAKY_TESTS_ATTEMPTS> <RESULTS_DIR> <ARTIFACTS_DIR> <RENAME_SUFFIX> <DIRS_TO_PULL> <ANDROID_FTL_DEVICE1> [<ANDROID_FTL_DEVICE2> <ANDROID_FTL_DEVICE3>...]"
    exit 1
fi

APK_RUNNER_APP=$1
APK_RUNNER_ANDROID_TEST=$2
FLAKY_TESTS_ATTEMPTS=$3
RESULTS_DIR=$4
ARTIFACTS_DIR=$5
RENAME_SUFFIX=$6
DIRS_TO_PULL=$7
SHARDS_COUNT=$8

LOG_FILE="$RESULTS_DIR/gcloud_output.txt"

rm -rf "$RESULTS_DIR"
mkdir -p "$RESULTS_DIR"
mkdir -p "$ARTIFACTS_DIR"

echo "gcloud --version"
gcloud --version

GCLOUD_CMD=(gcloud beta firebase test android run \
        --type instrumentation \
        --use-orchestrator \
        --num-uniform-shards=$SHARDS_COUNT \
        --test-targets 'notAnnotation com.twilio.test.util.ExcludeFromInstrumentedTests' \
        --num-flaky-test-attempts=$FLAKY_TESTS_ATTEMPTS \
        --timeout=30m \
        --no-record-video \
        --app "$APK_RUNNER_APP" \
        --test "$APK_RUNNER_ANDROID_TEST" \
        --directories-to-pull="$DIRS_TO_PULL")

shift 8
for DEVICE in "$@"; do
    GCLOUD_CMD+=(--device $DEVICE)
done

"${GCLOUD_CMD[@]}" 2>&1 | tee $LOG_FILE

EXIT_CODE=${PIPESTATUS[0]}
echo "gcloud finished with code $EXIT_CODE"

GS_FOLDER=`cat $LOG_FILE | grep "Raw results will be stored in your GCS bucket at" | sed "s/.*\/\(test-lab-.*\)\/.*/\1/"`
echo GS_FOLDER=$GS_FOLDER

gsutil -m cp -r "gs://$GS_FOLDER/*" "$RESULTS_DIR" || EXIT_CODE=$?
echo "gsutil finished with code $?"

# Add a suffix to folder names generated by the firebase test cloud in order to 
# be more informative when displayed in circleci's test summary
find "$RESULTS_DIR" -depth -mindepth 1 -maxdepth 1 -type d -exec mv {} {}$RENAME_SUFFIX \;

cd "$RESULTS_DIR"

rm `basename $APK_RUNNER_APP`
rm `basename $APK_RUNNER_ANDROID_TEST`

find "$RESULTS_DIR" -name "*.zip" -delete
tar czf "$ARTIFACTS_DIR/gcloud_results.zip" -C "$RESULTS_DIR" .

# keep only test_result.xml files, otherwise circleci won't display a test summary
find "$RESULTS_DIR" -type f ! -name "*.xml" -delete
find "$RESULTS_DIR" -type d -empty -delete

exit $EXIT_CODE
