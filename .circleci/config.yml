version: 2.1

orbs:
  slack: circleci/slack@4.12.5

aliases:
  - &workspace
    ~/rtd-sdk-monorepo
  - &build_output
    target/build
  - &android_sync_root_project_dir
    .
  - &android_sync_testapp_dir
    sdk/sync/sync-testapp-java
  - &android_twilsock_output
    sdk/twilsock/build/outputs
  - &android_shared_public_output
    sdk/shared/shared-public/build/outputs
  - &android_shared_public_sources_jar
    sdk/shared/shared-public/build/libs
  - &android_shared_internal_output
    sdk/shared/shared-internal/build/outputs
  - &android_shared_internal_sources_jar
    sdk/shared/shared-internal/build/libs
  - &android_sync_sdk_output
    sdk/sync/sync-android-kt/build/outputs
  - &android_sync_java_sdk_output
    sdk/sync/sync-android-java/build/outputs
  - &android_sync_shared_sdk_output
    sdk/sync/sync-android-shared/build/outputs
  - &android_sync_sdk_tests_output
    sdk/sync/sync-testapp-java/build/outputs
  - &android_sync_sdk_docs_jar_output
    build/libs
  - &android_sync_sdk_docs_html_output
    build/dokka/htmlMultiModule
  - &android_sync_sdk_jar_output
    sdk/sync/sync-android-kt/build/libs
  - &android_sync_java_sdk_jar_output
    sdk/sync/sync-android-java/build/libs
  - &android_sync_shared_jar_output
    sdk/sync/sync-android-shared/build/libs
  - &test_results_folder
    /tmp/junit
  - &release-tool-dir
    tools/sdk-release-tool
  - &cdn-pin-tool-dir
    tools/rtd-sdk-cdn-pin


  #============================================================================
  # Aliases: Parameters
  #============================================================================

  - source-dir-parameter: &source-dir-parameter
      source-dir:
        description: "SDK source directory"
        type: string
  - dest-dir-parameter: &dest-dir-parameter
      dest-dir:
        description: "destination directory"
        type: string
  - sdk-test-type-parameter: &sdk-test-type-parameter
      sdk-test-type:
        description: "Test type to run"
        type: enum
        enum: ["release", "debug"]
  - testapp-dir-parameter: &testapp-dir-parameter
      testapp-dir:
        description: "Sdk testapp directory"
        type: string
  - token-service-url-parameter: &token-service-url-parameter
      token-service-url:
        description: "Access token service url"
        type: string
  - test-twilsock-service-url-parameter: &test-twilsock-service-url-parameter
      test-twilsock-service-url:
        description: "Test twilsock service url"
        type: string
        default: ""
  - gradle-project-dir-parameter: &gradle-project-dir-parameter
      gradle-project-dir:
        description: "Gradle project directory"
        type: string
  - gradle-target-parameter: &gradle-target-parameter
      gradle-target:
        description: "Gradle target to execute"
        type: string
  - output-file-parameter: &output-file-parameter
      output-file:
        description: "Output file"
        type: string
        default: ""
  - input-file-parameter: &input-file-parameter
      input-file:
        description: "Input file"
        type: string
  - upload-type-parameter: &upload-type-parameter
      upload-type:
        description: "Upload type"
        type: enum
        enum: ["stage", "prod"]

  #============================================================================
  # Aliases: Tag & Branch Filters
  #============================================================================

  - any-branch-or-rc-tag-filter: &any-branch-or-rc-tag-filter
      filters:
        tags:
          only:
            - /^release-native-sync-android-\d+\.\d+\.\d+-rc\d+$/
            - /^release-sync-kotlin-ios-\d+\.\d+\.\d+-rc\d+$/
  - android-rc-tag-filter: &android-rc-tag-filter
      filters:
        tags:
          only: 
            - /^release-native-sync-android-\d+\.\d+\.\d+-rc\d+$/
        branches:
          ignore: /.*/
  - release-android-tag-filter: &release-android-tag-filter
      filters:
        tags:
          only: 
            - /^release-sync-android-\d+\.\d+\.\d+$/
        branches:
          ignore: /.*/
  - kotlin-ios-rc-tag-filter: &kotlin-ios-rc-tag-filter
      filters:
        tags:
          only: 
            - /^release-sync-kotlin-ios-\d+\.\d+\.\d+-rc\d+$/
        branches:
          ignore: /.*/
  - release-kotlin-ios-tag-filter: &release-kotlin-ios-tag-filter
      filters:
        tags:
          only:
            - /^release-sync-kotlin-ios-\d+\.\d+\.\d+$/
        branches:
          ignore: /.*/

#============================================================================
# Executors
#============================================================================

executors:
  linux-android-executor:
    docker:
      - image: cimg/android:2024.01.1
    resource_class: xlarge
    working_directory: *workspace
  small-linux-generic-executor:
    docker:
      - image: cimg/gcp:2024.03
    resource_class: small
    working_directory: *workspace
  macos-kotlin-ios-executor-x86:
    macos:
      xcode: "15.1.0"
    resource_class: macos.x86.medium.gen2
    working_directory: *workspace
  macos-kotlin-ios-executor-m1:
    macos:
      xcode: "15.1.0"
    resource_class: macos.m1.medium.gen1
    working_directory: *workspace
    environment:
      # when bumping xcode version - update the IOS_SIMULATOR_DEVICE_ID
      # See: https://circleci.com/docs/using-macos/
      # (on m1 executor deviceId is different than specified in the doc above (the doc is for x86_64). 
      # Run `xcrun simctl list` on a circleci node to get full device ids list)
      IOS_SIMULATOR_DEVICE_ID: A2CD73C7-D03C-47CA-858B-94C0D2A9475A

  #============================================================================
  # Commands: All
  #============================================================================

commands:
  clean_build_outputs:
    description: "Clean"
    parameters:
      dir:
        description: "Directory to clean"
        type: string
        default: *build_output
    steps:
      - run:
          name: "Clean build outputs: << parameters.dir >>"
          command: |
            source ~/.bashrc
            rm -rf << parameters.dir >>/tmp
            ./BuildScripts/clean-build-outputs.sh << parameters.dir >>

  # This step is still used in one place - in Android release.
  prepare_release_tool:
    description: "Prepare AWS settings"
    steps:
      - checkout
      - run:
          name: Install sdk-release-tool
          command: cd $RELEASE_TOOL_DIR && make SKIP_CREDENTIALS=1 install
          environment:
            RELEASE_TOOL_DIR: *release-tool-dir
      - run:
          name: Decode aws settings dev
          command: echo "$CDN_DEV_JSON" | base64 --decode > $RELEASE_TOOL_DIR/cdn-sdki.dev.json
          environment:
            RELEASE_TOOL_DIR: *release-tool-dir
      - run:
          name: Decode aws settings stage
          command: echo "$CDN_STAGE_JSON" | base64 --decode > $RELEASE_TOOL_DIR/cdn-sdki.stage.json
          environment:
            RELEASE_TOOL_DIR: *release-tool-dir
      - run:
          name: Decode aws settings prod
          command: echo "$CDN_PROD_JSON" | base64 --decode > $RELEASE_TOOL_DIR/cdn-sdki.prod.json
          environment:
            RELEASE_TOOL_DIR: *release-tool-dir
      - persist_to_workspace:
          root: .
          paths:
            - tools/sdk-release-tool/venv
            - tools/sdk-release-tool/cdn-sdki.*.json

  generate_gcloud_settings:
    description: "Generate GCloud settings"
    steps:
      - run:
          name: Decode Google Cloud key.json
          command: echo "$GCLOUD_SETTINGS" | base64 --decode > rtd-shared-lib-a27041a3fda9.json
      - run:
          name: Set Google Cloud target project
          command: |
            source ~/.bashrc
            gcloud config set project rtd-shared-lib
      - run:
          name: Authenticate with Google Cloud
          command: |
            source ~/.bashrc
            gcloud auth activate-service-account  rtd-shared-lib@appspot.gserviceaccount.com --key-file=rtd-shared-lib-a27041a3fda9.json --project=rtd-shared-lib

  notify_slack:
    parameters:
      <<: *upload-type-parameter
    steps:
      - when:
          condition:
            equal: [ prod, << parameters.upload-type >> ]
          steps:
            - slack/notify:
                event: pass
                channel: 'rtd-sdk-releases'
                template: success_tagged_deploy_1
      - when:
          condition:
            equal: [ stage, << parameters.upload-type >> ]
          steps:
            - slack/notify:
                event: pass
                template: success_tagged_deploy_1
      - slack/notify:
          event: fail
          template: basic_fail_1
          mentions: "@msgsdk-team"

  #============================================================================
  # Commands: iOS
  #============================================================================

  gem_install_xcodeproj:
    steps:
      - run:
          name: Intall ruby gem
          command: which gem >/dev/null || ( sudo apt update; sudo apt install -y ruby-dev; )
      - run:
          name: Install newest version of xcodeproj
          command: sudo gem install xcodeproj

  install_ios_certificates:
    description: "Install certificates"
    steps:
      - run: # recommendation from CircleCI to get rid of certificates installations problems
          name: Set fastlane version to 2.210.1
          command: |
            gem uninstall fastlane --all --executables
            gem install fastlane --version 2.210.1 --no-document
      - run:
          name: Install certificates
          command: ./BuildScripts/install-ios-certificates.sh

  distribute_sdk_ios:
    description: Distribute << parameters.sdk-type >> iOS SDK to << parameters.upload-type >>
    parameters:
      <<: *upload-type-parameter
    steps:
      - run:
          name: Install git-cliff
          command: brew install git-cliff
      - run:
          name: Publish iOS SDK to << parameters.upload-type >>
          command: cd ./tools/release-pipeline && yarn && yarn release "$CIRCLE_TAG"

  #============================================================================
  # Commands: Android
  #============================================================================

  generate_sonatype_settings:
    description: "Generate Sonatype settings"
    parameters:
      <<: *dest-dir-parameter
    steps:
      - run:
          name: Generate Sonatype settings
          command: |
            echo "$SONATYPE_SETTINGS" | base64 --decode > << parameters.dest-dir >>/sonatype-settings.xml
          working_directory: *workspace

  prepare-keystore-android:
    description: "Generate signing config"
    parameters:
      <<: *testapp-dir-parameter
    steps:
      - run:
          name: "Decode Signing Settings: << parameters.testapp-dir >>"
          command: |
            echo "$KEYSTORE" | base64 --decode > apk-test-runner.keystore
            echo "$BUILD_GRADLE_ADDON" | base64 --decode >> signing-release.gradle
          working_directory: << parameters.testapp-dir >>
      - persist_to_workspace:
          root: .
          paths:
            - << parameters.testapp-dir >>/apk-test-runner.keystore
            - << parameters.testapp-dir >>/signing-release.gradle

  prepare-test-service-urls-android:
    description: "Setup Test Services URLs"
    parameters:
      <<: *gradle-project-dir-parameter
      <<: *token-service-url-parameter
      <<: *test-twilsock-service-url-parameter
    steps:
      - run:
          name: "Setup Test Services URLs: << parameters.gradle-project-dir >>"
          command: |
              echo ACCESS_TOKEN_SERVICE_URL=<< parameters.token-service-url >> >> gradle.properties
              echo TEST_TWILSOCK_SERVICE_URL=<< parameters.test-twilsock-service-url >> >> gradle.properties
          working_directory: << parameters.gradle-project-dir >>
      - persist_to_workspace:
          root: .
          paths:
            - << parameters.gradle-project-dir >>/gradle.properties

  generate_project_settings_gradle:
    description: "Generate project settings"
    parameters:
      <<: *gradle-project-dir-parameter
    steps:
      - run:
          name: "Generate project settings: << parameters.gradle-project-dir >>"
          command: |
            echo "sonatype.username=$SONATYPE_USERNAME" >> gradle.properties
            echo "sonatype.password=$SONATYPE_PASSWORD" >> gradle.properties

            echo "signing.keyId=$SONATYPE_SIGNING_KEY_ID" >> gradle.properties
            echo "signing.password=$SONATYPE_SIGNING_PASSWORD" >> gradle.properties
            echo "signing.secretKeyRingFile=`pwd`/secring.gpg" >> gradle.properties
            echo "$SONATYPE_KEY_RING_FILE" | base64 --decode > secring.gpg

            echo "buildNumber=$CIRCLE_BUILD_NUM" >> gradle.properties
            echo "gitHash=$CIRCLE_SHA1" >> gradle.properties
            echo "gitBranch=$CIRCLE_BRANCH" >> gradle.properties
            echo "gitTag=$CIRCLE_TAG" >> gradle.properties
          working_directory: << parameters.gradle-project-dir >>

  cdn_pin_android:
    description: "Pin to CDN"
    steps:
      - run:
          name: "Pin to CDN"
          command: |
            ./BuildScripts/pin-android.sh

  apply_signing_config:
    description: "Applying signing config"
    parameters:
      <<: *testapp-dir-parameter
    steps:
      - run:
          name: "Applying signing config"
          command: |
            echo 'apply from: "./signing-release.gradle"' >> build.gradle
          working_directory: << parameters.testapp-dir >>

  run_gradle_target:
    description: "Running Gradle target"
    parameters:
      <<: *gradle-project-dir-parameter
      <<: *gradle-target-parameter
      <<: *output-file-parameter
    steps:
      - run:
          name: "Run Gradle target: << parameters.gradle-target >>"
          command: |
            source ~/.bashrc
            echo "BUILD_NUM $CIRCLE_BUILD_NUM"
            echo "SHA1 $CIRCLE_SHA1"
            echo "BRANCH $CIRCLE_BRANCH"
            echo "TAG $CIRCLE_TAG"
            ./gradlew \
              << parameters.gradle-target >> \
              | tee << parameters.output-file >>
          no_output_timeout: 120m
          working_directory: << parameters.gradle-project-dir >>

  print_sha256:
    description: "Printing SHA256"
    parameters:
      <<: *source-dir-parameter
      <<: *input-file-parameter
    steps:
      - run: 
          name: "Printing SHA256: << parameters.source-dir >>"
          command: shasum -a 256 << parameters.input-file >>
          working_directory: << parameters.source-dir >>

  push_sonatype_git_tag:
    description: "Push sonatype git tag"
    parameters:
      <<: *gradle-project-dir-parameter
      <<: *input-file-parameter
    steps:
      - run:
          name: "Push sonatype git tag"
          command: |
            ./BuildScripts/push-sonatype-git-tag.sh << parameters.gradle-project-dir >>/<< parameters.input-file >>

  create_aggregated_gradle_android:
    steps:
      - run:
          name: "Create aggregated gradle config"
          command: |
            cat build.gradle \
                sdk/utils/versions.gradle \
                sdk/shared/shared-public/build.gradle \
                sdk/shared/shared-internal/build.gradle \
                sdk/twilsock/build.gradle \
                sdk/sync/sync-android-kt/build.gradle \
                sdk/sync/sync-android-java/build.gradle \
                sdk/sync/sync-android-shared/build.gradle \
                > aggregated.gradle

  save_gradle_cache:
    steps:
      - create_aggregated_gradle_android
      - save_cache:
          paths:
            - ~/.konan
            - ~/.gradle
            - ./.gradle
          key: gradle-cache-{{ checksum "aggregated.gradle" }}

  restore_gradle_cache:
    steps:
      - create_aggregated_gradle_android
      - restore_cache:
          key: gradle-cache-{{ checksum "aggregated.gradle" }}

  save_cache_kmm_ios:
    steps:
      - create_aggregated_gradle_android
      - save_cache:
          paths:
            - ~/.gradle
            - ~/.konan
            - ~/android-sdk
          key: cache-kmm-ios-{{ checksum "aggregated.gradle" }}

  restore_cache_kmm_ios:
    steps:
      - create_aggregated_gradle_android
      - restore_cache:
          key: cache-kmm-ios-{{ checksum "aggregated.gradle" }}

  download_and_setup_android_sdk:
    description: "Download and setup android SDK"
    parameters:
      <<: *gradle-project-dir-parameter
    steps:
      - run:
          name: "Download and setup android SDK"
          command: |
            ANDROID_SDK_ROOT="$HOME/android-sdk"
            ./BuildScripts/download-android-sdk.sh "$ANDROID_SDK_ROOT"
            echo "sdk.dir=$ANDROID_SDK_ROOT" >> "$PROJECT_GRADLE_DIR/local.properties"
            echo "org.gradle.daemon=false" >> "$PROJECT_GRADLE_DIR/gradle.properties"
          environment:
            PROJECT_GRADLE_DIR: << parameters.gradle-project-dir >>

jobs:

  #============================================================================
  # Jobs: All
  #============================================================================

  prepare-release-tool:
    executor: small-linux-generic-executor
    steps:
      - checkout
      - prepare_release_tool

  #============================================================================
  # Jobs: Android
  #============================================================================

  pin-sdk-android:
    executor: small-linux-generic-executor
    description: "Pin to CDN"
    steps:
      - checkout
      - generate_sonatype_settings:
          dest-dir: *cdn-pin-tool-dir
      - attach_workspace:
          at: *workspace
      - cdn_pin_android

  prepare-dependencies:
    executor: linux-android-executor
    description: "Fetch SDK Dependendencies"
    steps:
      - checkout
      - prepare-keystore-android:
          testapp-dir: *android_sync_testapp_dir
      - generate_project_settings_gradle:
          gradle-project-dir: *android_sync_root_project_dir
      - prepare-test-service-urls-android:
          gradle-project-dir: *android_sync_root_project_dir
          token-service-url: "$SYNC_ACCESS_TOKEN_SERVICE_URL"
          test-twilsock-service-url: "$CONV_TEST_TWILSOCK_SERVICE_URL"
      - restore_gradle_cache
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: dependencies
      - save_gradle_cache

  test-sdk-android:
    executor: small-linux-generic-executor
    description: "Test"
    parameters:
      <<: *testapp-dir-parameter
      <<: *sdk-test-type-parameter
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - generate_gcloud_settings
      - run:
          name: Run androidTest in Firebase Test Lab
          command: |
            ./BuildScripts/run-sdk-android-tests-in-gcloud.sh \
                << parameters.testapp-dir >>/build/outputs/apk/<< parameters.sdk-test-type >>/sync-testapp-java-<< parameters.sdk-test-type >>.apk \
                << parameters.testapp-dir >>/build/outputs/apk/androidTest/<< parameters.sdk-test-type >>/sync-testapp-java-<< parameters.sdk-test-type >>-androidTest.apk \
                -<< parameters.sdk-test-type >> \
      - store_artifacts:
          name: Uploading FTL tests artifacts
          path: /tmp/gcloud-results
          destination: gcloud-results
      - store_test_results:
          path: *test_results_folder

  build-twilsock-android:
    executor: linux-android-executor
    description: "Build"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: twilsock:assembleRelease twilsock:assembleAndroidTest
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: twilsock:testReleaseUnitTest
      - store_test_results:
          path: sdk/twilsock/build/test-results/testReleaseUnitTest
      - clean_build_outputs:
          dir: sdk/twilsock/build
      - persist_to_workspace:
          root: .
          paths:
            - sdk/twilsock/build/*
      - store_artifacts:
          path: *android_twilsock_output
      - print_sha256:
          source-dir: *android_twilsock_output
          input-file: aar/*

  test-shared-internal-android:
    executor: small-linux-generic-executor
    description: "Test"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - generate_gcloud_settings
      - run:
          name: Run shared-internal android tests in Firebase Test Lab
          command: |
            TESTAPP="$SYNC_TESTAPP_DIR/build/outputs/apk/release/sync-testapp-java-release.apk"
            SHARDS_COUNT=1 # shared-internal don't have enough tests to fill default 5 shards.

            ./BuildScripts/run-sdk-android-tests-in-gcloud.sh \
                "$TESTAPP" \
                sdk/shared/shared-internal/build/outputs/apk/androidTest/release/shared-internal-release-androidTest.apk \
                -release \
                $SHARDS_COUNT
          environment:
            SYNC_TESTAPP_DIR: *android_sync_testapp_dir
      - store_artifacts:
          name: Uploading FTL tests artifacts
          path: /tmp/gcloud-results
          destination: gcloud-results
      - store_test_results:
          path: *test_results_folder

  test-twilsock-android:
    executor: small-linux-generic-executor
    description: "Test"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - generate_gcloud_settings
      - run:
          name: Run twilsock android tests in Firebase Test Lab
          command: |
            TESTAPP="$SYNC_TESTAPP_DIR/build/outputs/apk/release/sync-testapp-java-release.apk"
            ./BuildScripts/run-sdk-android-tests-in-gcloud.sh \
                "$TESTAPP" \
                sdk/twilsock/build/outputs/apk/androidTest/release/twilsock-release-androidTest.apk \
                -release
          environment:
            SYNC_TESTAPP_DIR: *android_sync_testapp_dir
      - store_artifacts:
          name: Uploading FTL tests artifacts
          path: /tmp/gcloud-results
          destination: gcloud-results
      - store_test_results:
          path: *test_results_folder

  test-twilsock-kotlin-ios:
    executor: macos-kotlin-ios-executor-m1
    description: "Test"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - run: 
          name: Run kotlin twilsock ios tests on iOS Simulator
          command: |
            ./BuildScripts/run-tests-kotlin-ios.rb sdk/twilsock/build/bin/iosSimulatorArm64/debugTest/test.kexe

  build-testables-twilsock-kotlin-ios:
    executor: macos-kotlin-ios-executor-x86
    description: "Build"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_cache_kmm_ios
      - download_and_setup_android_sdk:
          gradle-project-dir: *android_sync_root_project_dir
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: twilsock:iosSimulatorArm64TestBinaries
      - save_cache_kmm_ios
      - persist_to_workspace:
          root: .
          paths:
            - sdk/twilsock/build/*
      - store_artifacts:
          path: sdk/twilsock/build/bin
          destination: bin

  build-shared-internal-android:
    executor: linux-android-executor
    description: "Build"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: shared-internal:assembleRelease shared-internal:assembleAndroidTest
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: shared-internal:testReleaseUnitTest
      - store_test_results:
          path: sdk/shared/shared-internal/build/test-results/testReleaseUnitTest
      - clean_build_outputs:
          dir: sdk/shared/shared-internal/build
      - persist_to_workspace:
          root: .
          paths:
            - sdk/shared/shared-internal/build/*
      - store_artifacts:
          path: *android_shared_internal_output
      - store_artifacts:
          path: *android_shared_internal_sources_jar
      - print_sha256:
          source-dir: *android_shared_internal_output
          input-file: aar/*

  build-shared-public-android:
    executor: linux-android-executor
    description: "Build"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: shared-public:assembleRelease shared-public:packageSources
      - clean_build_outputs:
          dir: sdk/shared/shared-public/build
      - persist_to_workspace:
          root: .
          paths:
            - sdk/shared/shared-public/build/*
      - store_artifacts:
          path: *android_shared_public_output
      - store_artifacts:
          path: *android_shared_public_sources_jar
      - print_sha256:
          source-dir: *android_shared_public_output
          input-file: aar/*

  wait-tests-passed-android:
    executor: macos-kotlin-ios-executor-x86
    description: "All tests passed"
    steps:
      - run:
          name: All tests passed
          command: echo "All tests passed"

  build-sync-sdk-android:
    executor: linux-android-executor
    description: "Build"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - apply_signing_config:
          testapp-dir: *android_sync_testapp_dir
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: sync-android-kt:assembleRelease sync-android-java:assembleRelease sync-android-shared:assembleRelease sync-testapp-java:assembleRelease sync-android-kt:assembleAndroidTest sync-testapp-java:assembleAndroidTest
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: apiCheck
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: sync-android-kt:testReleaseUnitTest
      - store_test_results:
          path: sdk/sync/sync-android-kt/build/test-results/testReleaseUnitTest
      - clean_build_outputs:
          dir: sdk/sync/sync-android-kt/build
      - clean_build_outputs:
          dir: sdk/sync/sync-android-java/build
      - clean_build_outputs:
          dir: sdk/sync/sync-android-shared/build
      - clean_build_outputs:
          dir: sdk/sync/sync-testapp-java/build
      - persist_to_workspace:
          root: .
          paths:
            - sdk/sync/sync-android-kt/build/*
            - sdk/sync/sync-android-java/build/*
            - sdk/sync/sync-android-shared/build/*
            - sdk/sync/sync-testapp-java/build/*
      - store_artifacts:
          path: *android_sync_sdk_output
      - store_artifacts:
          path: *android_sync_java_sdk_output
      - store_artifacts:
          path: *android_sync_shared_sdk_output
      - store_artifacts:
          path: *android_sync_sdk_tests_output
      - print_sha256:
          source-dir: *android_sync_sdk_output
          input-file: aar/*
      - print_sha256:
          source-dir: *android_sync_java_sdk_output
          input-file: aar/*

  build-sync-sdk-swift-ios:
    executor: macos-kotlin-ios-executor-x86
    description: "Build"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - add_ssh_keys:
          fingerprints:
            - "SHA256:phNm6Lf1PJvwJmDzzP2atd84yiDL/jvh+lquogInhrc"
      - install_ios_certificates
      - gem_install_xcodeproj
      - restore_cache_kmm_ios
      - download_and_setup_android_sdk:
          gradle-project-dir: *android_sync_root_project_dir
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: sync-android-kt:assembleTwilioSyncLibReleaseXCFramework
      - save_cache_kmm_ios
      - run:
          name: Build TwilioSync.xcframework
          command: ./BuildScripts/build-sync-xcframework-kotlin-ios.sh
      - run:
          name: Build Documentation
          command: ./BuildScripts/build-docs-kotlin-ios.sh TwilioSync ""
      - run:
          name: Compressing artifacts
          command: |
            tar czf TwilioSyncLib.zip -C sdk/sync/sync-android-kt/build/XCFrameworks/release/TwilioSyncLib.xcframework .
            tar czf TwilioSync.zip -C ios/TwilioSync/output/xcframeworks/TwilioSync.xcframework .
            tar czf TwilioSync.doccarchive.zip -C ios/TwilioSync/DerivedData/Build/Products/Release-iphoneos/TwilioSync.doccarchive .
      - store_artifacts:
          path: TwilioSyncLib.zip
      - store_artifacts:
          path: TwilioSync.zip
      - store_artifacts:
          path: TwilioSync.doccarchive.zip
      - run:
          name: Build TwilioSyncTests
          command: ./BuildScripts/build-sync-tests-kotlin-ios.sh
      - persist_to_workspace:
          root: .
          paths:
            - sdk/sync/sync-android-kt/build/XCFrameworks/release/TwilioSyncLib.xcframework
            - ios/TwilioSync/output/xcframeworks/TwilioSync.xcframework
            - ios/TwilioSync/DerivedData/Build/Products/TwilioSyncTests.zip
      - store_artifacts:
          path: ios/TwilioSync/DerivedData/Build/Products/TwilioSyncTests.zip

  test-sync-sdk-android:
    executor: small-linux-generic-executor
    description: "Test"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - generate_gcloud_settings
      - run:
          name: Run sync-sdk android tests in Firebase Test Lab
          command: |
            TESTAPP="$SYNC_TESTAPP_DIR/build/outputs/apk/release/sync-testapp-java-release.apk"
            ./BuildScripts/run-sdk-android-tests-in-gcloud.sh \
                "$TESTAPP" \
                sdk/sync/sync-android-kt/build/outputs/apk/androidTest/release/sync-android-kt-release-androidTest.apk \
                -release
          environment:
            SYNC_TESTAPP_DIR: *android_sync_testapp_dir
      - store_artifacts:
          name: Uploading FTL tests artifacts
          path: /tmp/gcloud-results
          destination: gcloud-results
      - store_test_results:
          path: *test_results_folder

  test-sync-sdk-swift-ios:
    executor: small-linux-generic-executor
    description: "Test"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - generate_gcloud_settings
      - run:
          name: Run sync-sdk kotlin-ios tests in Firebase Test Lab
          command: ./BuildScripts/run-tests-in-gcloud-kotlin-ios.sh "$TEST_ARCHIVE" "$RESULTS_DIR" "$ARTIFACTS_DIR"
          environment:
            TEST_ARCHIVE: ios/TwilioSync/DerivedData/Build/Products/TwilioSyncTests.zip
            RESULTS_DIR: *test_results_folder
            ARTIFACTS_DIR: /tmp/gcloud-results
      - store_artifacts:
          name: Uploading FTL tests artifacts
          path: /tmp/gcloud-results
          destination: gcloud-results
      - store_test_results:
          path: *test_results_folder

  build-testables-sync-kotlin-ios:
    executor: macos-kotlin-ios-executor-x86
    description: "Build"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_cache_kmm_ios
      - download_and_setup_android_sdk:
          gradle-project-dir: *android_sync_root_project_dir
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: sync-android-kt:iosSimulatorArm64TestBinaries
      - save_cache_kmm_ios
      - persist_to_workspace:
          root: .
          paths:
            - sdk/sync/sync-android-kt/build/*
      - store_artifacts:
          path: sdk/sync/sync-android-kt/build/bin
          destination: bin

  test-sync-sdk-kotlin-ios:
    executor: macos-kotlin-ios-executor-m1
    description: "Test"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - run: 
          name: Run sync kotlin-ios tests on iOS Simulator
          command: |
            ./BuildScripts/run-tests-kotlin-ios.rb sdk/sync/sync-android-kt/build/bin/iosSimulatorArm64/debugTest/test.kexe

  build-sync-docs-android:
    executor: linux-android-executor
    description: "Generate documentation"
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: packageDocs
      - persist_to_workspace:
          root: .
          paths:
            -  build/*
            - *android_sync_sdk_jar_output
            - *android_sync_java_sdk_jar_output
            - *android_sync_shared_jar_output
      - store_artifacts:
          path: *android_sync_sdk_docs_html_output
      - store_artifacts:
          path: *android_sync_sdk_jar_output
      - store_artifacts:
          path: *android_sync_java_sdk_jar_output
      - store_artifacts:
          path: *android_sync_shared_jar_output

  publish-sdk-android:
    executor: small-linux-generic-executor
    description: "Publish"
    steps:
      - checkout
      - generate_project_settings_gradle:
          gradle-project-dir: *android_sync_root_project_dir
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: publishToSonatype closeSonatypeStagingRepository
          output-file: gradle-output.log
      - push_sonatype_git_tag:
          gradle-project-dir: *android_sync_root_project_dir
          input-file: gradle-output.log

  promote-to-release-sdk-android:
    executor: small-linux-generic-executor
    description: "Promote to release"
    steps:
      - checkout
      - generate_project_settings_gradle:
          gradle-project-dir: *android_sync_root_project_dir
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - run:
          name: Extract sonatype repo id from git tag
          command: |
            SONATYPE_REPO_ID=`./BuildScripts/parse-sonatype-git-tag.sh`
            echo "export SONATYPE_REPO_ID=$SONATYPE_REPO_ID" > $BASH_ENV
      - run_gradle_target:
          gradle-project-dir: *android_sync_root_project_dir
          gradle-target: releaseSonatypeStagingRepository --staging-repository-id $SONATYPE_REPO_ID


  #================================================================
  # Jobs: iOS
  #================================================================

  distribute-sdk-ios:
    executor: macos-kotlin-ios-executor-x86 # doc generation requires macOS executor
    parameters:
      <<: *upload-type-parameter
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - install_ios_certificates
      - gem_install_xcodeproj
      - distribute_sdk_ios:
          upload-type: << parameters.upload-type >>
      - notify_slack:
          upload-type: << parameters.upload-type >>

workflows:
  version: 2.1

  #=========================================================================
  # Workflows: Android Build, Test & Publish Snapshot
  #=========================================================================

  android:
    jobs:
      - prepare-dependencies:
          <<: *any-branch-or-rc-tag-filter
          context:
            - rtd-ci-tokens
            - rtd-ci-test-instance-config
            - rtd-ci-build-publish-snapshot
            - rtd-android-chat-demo-app-release
      - build-shared-internal-android:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-build-publish-snapshot
          requires:
            - prepare-dependencies
      - build-shared-public-android:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-build-publish-snapshot
          requires:
            - prepare-dependencies
      - build-twilsock-android:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-build-publish-snapshot
          requires:
            - prepare-dependencies
      - build-testables-twilsock-kotlin-ios:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-build-publish-snapshot
          requires:
            - prepare-dependencies
      - test-twilsock-android:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-testing
          requires:
            - build-twilsock-android
            - build-sync-sdk-android # for testapp.apk
      - test-twilsock-kotlin-ios:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-testing
          requires:
            - build-testables-twilsock-kotlin-ios
      - test-shared-internal-android:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-testing
          requires:
            - build-shared-internal-android
            - build-sync-sdk-android # for testapp.apk
      - build-sync-sdk-android:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-build-publish-snapshot
          requires:
            - prepare-dependencies
      - build-sync-sdk-swift-ios:
          <<: *any-branch-or-rc-tag-filter
          context:
            - rtd-ci-tokens
            - rtd-ci-build-publish-snapshot
          requires:
            - prepare-dependencies
      - test-sdk-android:
          <<: *any-branch-or-rc-tag-filter
          name: test-sync-sdk-android-java
          testapp-dir: *android_sync_testapp_dir
          sdk-test-type: release
          context: rtd-ci-testing
          requires:
            - build-sync-sdk-android
      - test-sync-sdk-android:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-testing
          requires:
            - build-sync-sdk-android
      - test-sync-sdk-swift-ios:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-testing
          requires:
            - build-sync-sdk-swift-ios
      - build-testables-sync-kotlin-ios:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-build-publish-snapshot
          requires:
            - prepare-dependencies
      - test-sync-sdk-kotlin-ios:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-testing
          requires:
            - build-testables-sync-kotlin-ios
      - build-sync-docs-android:
          <<: *any-branch-or-rc-tag-filter
          context: rtd-ci-build-publish-snapshot
          requires:
            - prepare-dependencies
      - wait-tests-passed-android:
          <<: *any-branch-or-rc-tag-filter
          name: wait-tests-sync-android
          requires:
            - test-twilsock-android
            - test-twilsock-kotlin-ios
            - test-shared-internal-android
            - test-sync-sdk-android
            - test-sync-sdk-android-java
            - test-sync-sdk-swift-ios
            - test-sync-sdk-kotlin-ios
            - build-sync-docs-android
            - build-shared-public-android
      - publish-sdk-android:
          <<: *android-rc-tag-filter
          context: rtd-ci-build-publish-snapshot
          requires:
            - wait-tests-sync-android
      - distribute-sdk-ios:
          <<: *kotlin-ios-rc-tag-filter
          name: distribute-sdk-kotlin-ios-stage
          upload-type: stage
          context:
            - rtd-github-api
            - rtd-ci-build-publish-snapshot
            - rtd-sdk-slack-secrets
          requires:
            - wait-tests-sync-android

  #=========================================================================
  # Workflows: Promote RC to public Release
  #=========================================================================

  promote-to-release-android:
    jobs:
      - prepare-release-tool:
          <<: *release-android-tag-filter
          context: rtd-cdn-upload
      - prepare-dependencies:
          <<: *release-android-tag-filter
          context:
            - rtd-ci-tokens
            - rtd-ci-test-instance-config
            - rtd-ci-build-publish-snapshot
      - slack/on-hold:
          <<: *release-android-tag-filter
          name: notify-slack-release-android
          channel: 'rtd-sdk-releases'
          context: rtd-sdk-slack-secrets
          requires:
            - prepare-release-tool
            - prepare-dependencies
          mentions: "@msgsdk-team"
      - approve-release-android:
          <<: *release-android-tag-filter
          type: approval
          requires:
            - notify-slack-release-android
      - pin-sdk-android:
          <<: *release-android-tag-filter
          context: rtd-ci-build-publish-snapshot
          requires:
            - approve-release-android
      - promote-to-release-sdk-android:
          <<: *release-android-tag-filter
          context: rtd-ci-build-publish-snapshot
          requires:
            - pin-sdk-android

  promote-to-release-kotlin-ios:
    jobs:
      - distribute-sdk-ios:
          <<: *release-kotlin-ios-tag-filter
          name: distribute-sdk-kotlin-ios-prod
          upload-type: prod
          context:
            - rtd-github-api
            - rtd-ci-build-publish-snapshot
            - rtd-sdk-slack-secrets

